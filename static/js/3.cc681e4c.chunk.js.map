{"version":3,"sources":["logic/contexts/ChannelContext.js","logic/custom-hooks/useOnChannelEnter.js","logic/custom-hooks/useOnRoomEnter.js","components/ChannelNav/RoomLink.js","components/OnlineUsers/UserDisplay.js","components/TopBar.js","assets/svg/reply-fill.svg","components/Chat/MsgButtons.js","components/Chat/MentionWrapper.js","assets/svg/attach_file_black_24dp.svg","components/Upload/AttachmentWrapper.js","components/Chat/ReplyContext.js","logic/date.js","components/Chat/MsgHeader.js","components/Chat/ChatMsg.js","components/Chat/ChatDisplay.js","components/Chat/ReplyBar.js","components/Chat/MentionsPopup.js","components/Chat/ChatBarInput.js","components/Chat/ChatBar.js","components/Upload/UploadProgressWrapper.js","components/Chat/ChatBarWrapper.js","components/Chat/ChatWrapper.js","components/OnlineUsers/OnlineUsers.js","logic/custom-hooks/useUserCountStrs.js","components/Settings/RoomSettings/RoomOverview.js","components/Settings/RoomSettings/RoomSettings.js"],"names":["ChannelContext","createContext","useOnChannelEnter","user","channelID","channelList","updateChannel","setError","useState","visitingChannel","setVisitingChannel","roleList","setRoleList","roomCategories","setRoomCategories","roomList","setRoomList","userList","setUserList","onlineUsers","setOnlineUsers","userRole","setUserRole","isVisiting","useMemo","every","c","id","history","useHistory","location","useLocation","useEffect","a","getInfoForVisitingChannel","data","channelInfo","name","icon","defaultRoom","message","getChannelInfo","detachListenersForChannel","uid","find","u","role","pathname","defaultRoomID","Object","keys","push","replace","useOnRoomEnter","roomID","setRoomName","finishLoading","msgList","setMsgList","onRoomEnter","detachListenersForRoom","dealWithReadMentions","getRoomStuff","submitMsg","msg","replyTo","mentions","attachments","msgObj","timestamp","getUnixTime","Date","pushToMsgList","msgID","length","forEach","mention","updateMentions","RoomLink","channel","room","mentionCount","isAdmin","editRoom","toolTipInfo","setToolTipInfo","actionsRef","useRef","className","to","activeClassName","svg","settingsSVG","elRef","el","current","settings","onMouseEnter","text","onMouseLeave","onClick","count","posInfo","getBoundingClientRect","direction","UserDisplay","selectMention","isFocused","theme","searchValue","parentProps","avatar","color","status","displayName","img","userStatus","TopBar","MsgButtons","setReplyTo","IconBtn","replyIcon","alt","MentionWrapper","props","style","display","children","AttachmentWrapper","url","cancel","src","paperclipSVG","href","closeSVG","ReplyContext","Avatar","convertTimestampToString","dateObj","fromUnixTime","isToday","format","isYesterday","MsgHeader","ChatMsg","content","onReplyTo","senderID","msgId","replyContext","isShowBtns","setIsShowBtns","currentUser","useContext","UserContext","isMentioned","some","m","sender","uObj","replyUser","convertPlaintextToHTML","useCallback","mentionRanges","mentionOffsets","range","offset","i","split","val","mentionIndex","indexOf","includes","concat","onMouseOver","map","idx","ChatDisplay","messagesEndRef","scrollerRef","isScrolled","setIsScrolled","scrollIntoView","behavior","block","inline","alignToTop","scrollToBottom","ref","opacity","onLoad","notifyWhenScrollingIsFinished","obj","Promise","resolve","requestAnimationFrame","check","scrollHeight","offsetHeight","scrollTop","sameFrame","ReplyBar","close","closeBtn","MentionsPopup","ChatBarInput","chatBarInputRef","roomName","isAttachments","getAttachmentsURL","cleanUpAttachments","submit","EditorState","createEmpty","editorState","setEditorState","isMentionPopup","setIsMentionPopup","suggestions","setSuggestions","ErrorContext","mentionPlugin","createMentionPlugin","mentionComponent","plugins","MentionSuggestions","editorKey","onChange","keyBindingFn","e","key","handleKeyCommand","cmd","fillMentionArr","raw","entityMap","mentionArr","blocks","entityRanges","replyToMsgID","convertToRaw","getCurrentContent","attachmentsURL","newEditorState","ContentState","createFromText","currentState","getSelection","newEditorWithCurrentState","forceSelection","onMsgSubmit","placeholder","open","onOpenChange","isOpen","entryComponent","popoverContainer","onSearchChange","query","value","sort","b","filter","renderEmptyPopup","ChatBar","handleNewAttachments","removeAttachment","borderTopLeftRadius","borderTopRightRadius","UploadFile","handleFile","actionOnChange","addCircleSvg","f","UploadProgressWrapper","isCompleted","task","progress","ChatBarWrapper","setAttachments","uploadTasks","setUploadTasks","uploadTasksCtnRef","useLayoutEffect","top","onSubmit","submitHandler","t","file","prev","copy","all","beginUpload","uniqid","listenToUploadProgress","getDownloadURL","snapshot","fileURL","preventDefault","ChatWrapper","isVisitor","useParams","subscribeToChannel","focus","FlatBtn","OnlineUsers","list","roles","rolesRef","userCountStrs","setUserCountStrs","userCount","classList","add","remove","useUserCountStrs","CatList","catRef","cat","headerSubtext","RoomOverview","useInputValues","inputValues","setInputValues","handleChange","room_name","room_category","category","isMounted","useSuccess","success","setSuccess","isSaving","setIsSaving","Success","updateRoomName","createRoomCategory","updateCategoryOfRoom","InputField","label","type","loading","RoomSettings","SetError","isMobile","useMobileCheck","isMobileCheck","useReducer","state","action","payload","deleteRoom","Error","dispatch","Import","mobile","desktop","Settings","categories","btnList","createSettingsButtonDetails","overview","isDefault"],"mappings":"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","file":"static/js/3.cc681e4c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const ChannelContext = createContext(null);\n","import { set } from 'date-fns';\nimport { useRef, useState, useMemo, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n  getChannelInfo,\n  detachListenersForChannel,\n  getInfoForVisitingChannel,\n} from '../channel_firebaseStuff';\n\nexport default function useOnChannelEnter(\n  user,\n  channelID,\n  channelList,\n  updateChannel,\n  setError\n) {\n  const [visitingChannel, setVisitingChannel] = useState();\n  const [roleList, setRoleList] = useState(['Online']);\n  const [roomCategories, setRoomCategories] = useState(['none']);\n  const [roomList, setRoomList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [userRole, setUserRole] = useState();\n\n  const isVisiting = useMemo(\n    () => channelList?.every((c) => c.id !== channelID),\n    [channelList, channelID]\n  );\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(\n    function onVisitToChannelNotSubscribedTo() {\n      if (!user || !channelList) return;\n      (async () => {\n        if (!channelID || !isVisiting) return setVisitingChannel();\n        if (visitingChannel) return;\n        try {\n          const data = await getInfoForVisitingChannel(channelID);\n          const channelInfo = {\n            name: data[0],\n            icon: data[1],\n            defaultRoom: data[2],\n          };\n          setVisitingChannel(channelInfo);\n        } catch (error) {\n          setError(error.message);\n        }\n      })();\n    },\n    [user, channelID, channelList, visitingChannel, isVisiting, setError]\n  );\n  useEffect(() => {\n    if (!channelID || !user) return;\n    (async () => {\n      try {\n        await getChannelInfo(\n          channelID,\n          updateChannel,\n          setRoomCategories,\n          setRoomList,\n          setRoleList,\n          setUserList,\n          setOnlineUsers\n        );\n      } catch (error) {\n        setError(error.message);\n      }\n    })();\n\n    return () => {\n      detachListenersForChannel(channelID, user.uid);\n    };\n  }, [channelID, isVisiting, updateChannel, user, setError]);\n\n  useEffect(() => {\n    if (!user || !userList) return;\n    setUserRole(userList.find((u) => u.uid === user.uid)?.role);\n  }, [user, userList]);\n\n  useEffect(\n    function redirectToDefaultRoom() {\n      if (!user || !channelList) return;\n      if (\n        location.pathname === `/channels/${channelID}` ||\n        location.pathname === `/channels/${channelID}/`\n      ) {\n        //`/channels/${channelID}/` is pathname before user is redirected into default room\n        if (isVisiting) {\n          if (!visitingChannel) return;\n          const defaultRoomID = Object.keys(visitingChannel.defaultRoom)[0];\n          history.push(`/channels/${channelID}/${defaultRoomID}`);\n        } else {\n          const defaultRoomID =\n            channelList &&\n            Object.keys(\n              channelList?.find((c) => c.id === channelID).defaultRoom\n            )[0];\n          history.replace(`/channels/${channelID}/${defaultRoomID}/`);\n        }\n      }\n    },\n    [\n      user,\n      channelID,\n      channelList,\n      history,\n      isVisiting,\n      visitingChannel,\n      location.pathname,\n    ]\n  );\n\n  return {\n    visitingChannel,\n    roleList,\n    roomCategories,\n    roomList,\n    userList,\n    onlineUsers,\n    userRole,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport {\n  detachListenersForRoom,\n  pushToMsgList,\n  getRoomStuff,\n} from '../room_firebaseStuff';\nimport getUnixTime from 'date-fns/getUnixTime';\nimport { dealWithReadMentions, updateMentions } from '../user_firebaseStuff';\n\nexport default function useOnRoomEnter(\n  user,\n  channelID,\n  roomID,\n  setRoomName,\n  finishLoading,\n  setError\n) {\n  const [msgList, setMsgList] = useState([]);\n\n  useEffect(() => {\n    if (!user || !channelID || !roomID) return;\n    onRoomEnter();\n\n    async function onRoomEnter() {\n      try {\n        await getRoomStuff(roomID, setRoomName, setMsgList, finishLoading);\n        await dealWithReadMentions(user.uid, channelID, roomID);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    return async function () {\n      try {\n        detachListenersForRoom(roomID);\n        await dealWithReadMentions(user.uid, channelID, roomID); // for any mentions that occur when user is in room\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n  }, [roomID, channelID, user, setRoomName, finishLoading, setError]);\n\n  return { msgList, submitMsg };\n\n  async function submitMsg(msg, replyTo, mentions, attachments) {\n    const msgObj = {\n      msg,\n      user: user.uid,\n      replyTo: replyTo || null,\n      mentions: mentions || null,\n      attachments: attachments || null,\n      timestamp: getUnixTime(new Date()),\n    };\n    const msgID = await pushToMsgList(roomID, msgObj);\n\n    if (mentions.length > 0)\n      mentions.forEach(async (mention) => {\n        try {\n          await updateMentions(mention.uid, channelID, roomID, msgID);\n        } catch (error) {\n          setError(error.message);\n        }\n      });\n  }\n}\n","import React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MentionCounter from '../ChannelNav/MentionCounter';\nimport IconBtn from '../IconBtn';\nimport Tooltip from '../Tooltip';\n\nimport settingsSVG from '../../assets/svg/settings-3-fill.svg';\n\nconst RoomLink = ({ channel, room, mentionCount, isAdmin, editRoom }) => {\n  const [toolTipInfo, setToolTipInfo] = useState();\n  const actionsRef = useRef({});\n  return (\n    <>\n      <li className=\"room-link-item\">\n        <NavLink\n          to={`/channels/${channel.id}/${room.id}`}\n          className=\"content\"\n          activeClassName=\"active\"\n        >\n          <span>{room.name}</span>\n          {isAdmin && (\n            <div className=\"actions\">\n              <IconBtn\n                svg={settingsSVG}\n                elRef={(el) => (actionsRef.current.settings = el)}\n                onMouseEnter={() =>\n                  setToolTipInfo({\n                    text: 'Edit Room',\n                    el: actionsRef.current.settings,\n                  })\n                }\n                onMouseLeave={() => setToolTipInfo()}\n                onClick={editRoom}\n              />\n            </div>\n          )}\n          {mentionCount && <MentionCounter count={mentionCount} />}\n        </NavLink>\n      </li>\n      {toolTipInfo && (\n        <Tooltip\n          text={toolTipInfo.text}\n          posInfo={toolTipInfo.el.getBoundingClientRect()}\n          direction=\"top\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default RoomLink;\n","import React from 'react';\n\nimport Avatar from '../Avatar';\n\nconst UserDisplay = ({\n  className,\n  id,\n  user,\n  onClick,\n  selectMention, // need this here so it doesn't get fed into parentProps\n  mention,\n  theme, // need this here so it doesn't get fed into parentProps\n  searchValue, // need this here so it doesn't get fed into parentProps\n  isFocused,\n  ...parentProps\n}) => {\n  if (isFocused) className += ' user-focused';\n\n  user = user || mention;\n  const { avatar, color, status, displayName } = user;\n\n  return (\n    <li\n      className={`user-wrapper ${className}`}\n      onClick={onClick}\n      {...parentProps}\n    >\n      <Avatar img={avatar} color={color} userStatus={status} />\n      <div className=\"content\">\n        <span>{displayName}</span>\n\n        <span className=\"subText\"></span>\n      </div>\n    </li>\n  );\n};\n\nexport default UserDisplay;\n","import React from 'react';\n\nimport '../styles/TopBar.css';\n\nconst TopBar = ({ room }) => {\n  return (\n    <section className=\"top-bar\">\n      {room && <header className=\"room-name-wrapper\">{room.name}</header>}\n      <div className=\"toolbar\">\n        {room && <div className=\"channel-functions\"></div>}\n      </div>\n    </section>\n  );\n};\n\nexport default TopBar;\n","export default __webpack_public_path__ + \"static/media/reply-fill.94bd357e.svg\";","import React from 'react';\n\nimport '../../styles/MsgButtons.css';\n\nimport replyIcon from '../../assets/svg/reply-fill.svg';\nimport IconBtn from '../IconBtn';\n\nconst MsgButtons = ({ setReplyTo }) => {\n  return (\n    <div className=\"msg-btns btn-ctn\">\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <IconBtn svg={replyIcon} alt=\"reply button\" onClick={setReplyTo} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MsgButtons;\n","import React from 'react';\n\nimport '../../styles/MentionWrapper.css';\n\nconst MentionWrapper = ({ displayName, uid, id, mention, ...props }) => {\n  displayName = displayName || mention.displayName;\n  uid = uid || mention.uid;\n  return (\n    <span className=\"mention-wrapper\" data-uid={uid} data-id={id}>\n      @{displayName}\n      <span style={{ display: 'none' }}>{props.children}</span>\n    </span>\n  );\n};\n\nexport default MentionWrapper;\n","export default __webpack_public_path__ + \"static/media/attach_file_black_24dp.66ab46ba.svg\";","import React from 'react';\n\nimport IconBtn from '../IconBtn';\n\nimport closeSVG from '../../assets/svg/close-circle-fill.svg';\nimport paperclipSVG from '../../assets/svg/attach_file_black_24dp.svg';\n\nimport '../../styles/AttachmentWrapper.css';\n\nconst AttachmentWrapper = ({ name, url, cancel }) => {\n  return (\n    <div className=\"attachment-wrapper\">\n      <div className=\"content\">\n        <div className=\"icon-wrapper\">\n          <img src={paperclipSVG} alt=\"uploaded file icon\" />\n        </div>\n        {url ? (\n          <a className=\"link-wrapper text-wrapper\" href={url}>\n            {name}\n          </a>\n        ) : (\n          <div className=\"text-wrapper\">{name}</div>\n        )}\n      </div>\n      {cancel && (\n        <div className=\"actions\">\n          <IconBtn svg={closeSVG} onClick={cancel} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AttachmentWrapper;\n","import React from 'react';\n\nimport Avatar from '../Avatar';\n\nconst ReplyContext = ({ displayName, avatar, color, msg }) => {\n  return (\n    <div className=\"msg-reply-context\">\n      <Avatar img={avatar} color={color} />\n      <span className=\"display-name\">{displayName}</span>\n      <div className=\"replied-text-preview\">\n        <div className=\"content\">{msg}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReplyContext;\n","import fromUnixTime from 'date-fns/fromUnixTime';\nimport isToday from 'date-fns/isToday';\nimport isYesterday from 'date-fns/isYesterday';\nimport format from 'date-fns/format';\n\nfunction convertTimestampToString(timestamp) {\n  const dateObj = fromUnixTime(timestamp);\n\n  if (isToday(dateObj)) return `Today at ${format(dateObj, \"K':'m a\")}`;\n\n  if (isYesterday(dateObj)) return `Yesterday at ${format(dateObj, \"K':'m a\")}`;\n\n  return format(dateObj, \"M'/'d'/'y\");\n}\n\nexport { convertTimestampToString };\n","import React from 'react';\n\nimport { convertTimestampToString } from '../../logic/date';\n\nconst MsgHeader = ({ displayName, timestamp }) => {\n  return (\n    <header>\n      <span className=\"display-name\">{displayName}</span>\n      <span className=\"timestamp\">{convertTimestampToString(timestamp)}</span>\n    </header>\n  );\n};\n\nexport default MsgHeader;\n","import React, { useContext, useState, useMemo, useCallback } from 'react';\n\nimport { UserContext } from '../../logic/contexts/UserContext';\n\nimport Avatar from '../Avatar';\nimport MsgButtons from './MsgButtons';\nimport MentionWrapper from './MentionWrapper';\nimport AttachmentWrapper from '../Upload/AttachmentWrapper';\nimport ReplyContext from './ReplyContext';\nimport MsgHeader from './MsgHeader';\n\nimport '../../styles/ChatMsg.css';\n\nconst ChatMsg = ({ content, userList, onReplyTo }) => {\n  const {\n    user: senderID,\n    msg,\n    timestamp,\n    msgId,\n    mentions,\n    attachments,\n    replyTo: replyContext,\n  } = content;\n\n  const [isShowBtns, setIsShowBtns] = useState(false); //buttons on hover\n  const { user: currentUser } = useContext(UserContext);\n  const isMentioned =\n    mentions?.some((m) => m.uid === currentUser.uid) || replyContext?.user;\n\n  const sender = useMemo(\n    () => userList.find((uObj) => uObj.uid === senderID),\n    [userList, senderID]\n  );\n  const replyUser = useMemo(\n    () => userList.find((uObj) => uObj.uid === replyContext?.user),\n    [userList, replyContext]\n  );\n\n  const convertPlaintextToHTML = useCallback(\n    (text, mentions) => {\n      if (!mentions || mentions.length === 0) return text;\n      let mentionRanges = []; // text indexes that contain a mention\n      let mentionOffsets = []; //beginning index of each mention\n      mentions.forEach((mention) => {\n        mentionOffsets.push(mention.range.offset);\n        for (\n          let i = mention.range.offset;\n          i < mention.range.offset + mention.range.length;\n          i++\n        ) {\n          mentionRanges.push(i);\n        }\n      });\n\n      let content = [];\n      text.split('').forEach((val, i) => {\n        const mentionIndex = mentionOffsets.indexOf(i); //find which mention has offset i\n        if (mentionIndex !== -1)\n          //marks beginning of mention\n          content.push(\n            <MentionWrapper\n              key={mentionIndex}\n              displayName={\n                userList.find((u) => u.uid === mentions[mentionIndex].uid)\n                  .displayName\n              }\n              uid={mentions[mentionIndex].uid}\n            />\n          );\n\n        if (mentionRanges.includes(i)) return; // rest of the mention, can skip because mentionWrapper already inserted\n\n        if (i === 0 || mentionRanges.includes(i - 1)) return content.push(val); // marks beginning of non-mention string\n\n        return (content[content.length - 1] =\n          content[content.length - 1].concat(val)); // string continues\n      });\n      return content;\n    },\n    [userList]\n  );\n  return (\n    <li\n      className={isMentioned ? 'chat-msg mentioned' : 'chat-msg'}\n      onMouseOver={() => setIsShowBtns(true)}\n      onMouseLeave={() => setIsShowBtns(false)}\n    >\n      <div className=\"msg\">\n        {replyContext && (\n          <ReplyContext\n            displayName={replyUser.displayName}\n            msg={convertPlaintextToHTML(\n              replyContext.msg,\n              replyContext.mentions\n            )}\n            avatar={replyUser.avatar}\n            color={replyUser.color}\n          />\n        )}\n        <div className=\"content\">\n          <Avatar img={sender.avatar} color={sender.color} />\n          <MsgHeader displayName={sender.displayName} timestamp={timestamp} />\n          <div className=\"msg-content\">\n            {convertPlaintextToHTML(msg, mentions)}\n          </div>\n          {attachments && (\n            <div className=\"attachments-ctn\">\n              {attachments.map((a, idx) => {\n                return (\n                  <AttachmentWrapper key={idx} url={a.url} name={a.name} />\n                );\n              })}\n            </div>\n          )}\n          {isShowBtns && (\n            <MsgButtons\n              msgId={msgId}\n              setReplyTo={() => onReplyTo(sender.displayName, msgId)}\n            />\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ChatMsg;\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport ChatMsg from './ChatMsg';\n\nimport '../../styles/ChatDisplay.css';\n\nconst ChatDisplay = ({ roomID, msgList, userList, ...props }) => {\n  const messagesEndRef = useRef();\n  const scrollerRef = useRef();\n  const [isScrolled, setIsScrolled] = useState(true);\n  function scrollToBottom() {\n    messagesEndRef.current?.scrollIntoView({\n      behavior: 'auto',\n      block: 'end',\n      inline: 'center',\n      alignToTop: false,\n    });\n  }\n\n  useEffect(() => {\n    return () => setIsScrolled(false);\n  }, [roomID]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [msgList]);\n\n  return (\n    <div className=\"messages-ctn\">\n      <div\n        className=\"scroller\"\n        ref={scrollerRef}\n        style={{ opacity: isScrolled ? 1 : 0 }}\n        onLoad={async () => {\n          await notifyWhenScrollingIsFinished(scrollerRef.current);\n          setIsScrolled(true);\n        }}\n      >\n        <div className=\"scroller-content\">\n          <ol>\n            {msgList.map((obj) => {\n              return (\n                <ChatMsg\n                  key={obj.msgId}\n                  content={obj}\n                  userList={userList}\n                  {...props}\n                />\n              );\n            })}\n          </ol>\n        </div>\n        <span ref={messagesEndRef}></span>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatDisplay;\n\nfunction notifyWhenScrollingIsFinished(el) {\n  return new Promise((resolve) => {\n    requestAnimationFrame(check);\n    let sameFrame = 0;\n\n    function check() {\n      if (el.scrollHeight - el.offsetHeight - el.scrollTop < 50) {\n        if (sameFrame++ > 10) return resolve();\n\n        requestAnimationFrame(check);\n      }\n    }\n  });\n}\n","import React from 'react';\nimport IconBtn from '../IconBtn';\n\nimport '../../styles/ReplyBar.css';\n\nimport closeBtn from '../../assets/svg/close-circle-fill.svg';\n\nconst ReplyBar = ({ displayName, close }) => {\n  return (\n    <div className=\"reply-bar\">\n      <div className=\"container\">\n        <div>\n          <div className=\"content\">\n            Replying to <span className=\"display-name\">{displayName}</span>\n          </div>\n        </div>\n        <div className=\"actions btn-ctn\">\n          <IconBtn onClick={close} svg={closeBtn} className=\"close-btn\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReplyBar;\n","import React from 'react';\n\nimport '../../styles/MentionsPopup.css';\n\nconst MentionsPopup = ({ children }) => {\n  return (\n    <div className=\"mentions-popup\">\n      <div className=\"suggestions-wrapper\">\n        <header>\n          <h3>Members</h3>\n        </header>\n        {children.length > 0 ? (\n          <ul>{children}</ul>\n        ) : (\n          <div className=\"text-wrapper\">\n            <span>No users match</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MentionsPopup;\n","import React, { useState, useEffect, useMemo, useContext } from 'react';\nimport { EditorState, ContentState, convertToRaw } from 'draft-js';\nimport Editor from '@draft-js-plugins/editor';\nimport createMentionPlugin from '@draft-js-plugins/mention';\n\nimport { ErrorContext } from '../../logic/contexts/ErrorContext';\n\nimport UserDisplay from '../OnlineUsers/UserDisplay';\nimport MentionsPopup from './MentionsPopup';\nimport MentionWrapper from './MentionWrapper';\n\nconst ChatBarInput = ({\n  chatBarInputRef,\n  roomName,\n  userList,\n  replyTo,\n  setReplyTo,\n  isAttachments,\n  getAttachmentsURL,\n  cleanUpAttachments,\n  submit,\n}) => {\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  const [isMentionPopup, setIsMentionPopup] = useState(false);\n  const [suggestions, setSuggestions] = useState(userList);\n  const { setError } = useContext(ErrorContext);\n\n  const { MentionSuggestions, plugins } = useMemo(() => {\n    const mentionPlugin = createMentionPlugin({\n      mentionComponent: MentionWrapper,\n    });\n    // eslint-disable-next-line no-shadow\n    const { MentionSuggestions } = mentionPlugin;\n    // eslint-disable-next-line no-shadow\n    const plugins = [mentionPlugin];\n    return { plugins, MentionSuggestions };\n  }, []);\n\n  function onChange(editorState) {\n    setEditorState(editorState);\n  }\n\n  function onOpenChange(isOpen) {\n    setIsMentionPopup(isOpen);\n  }\n\n  function onQueryChange({ value }) {\n    setSuggestions(queryUserList(value));\n\n    function queryUserList(query) {\n      return userList\n        .sort((a, b) => {\n          if (a.displayName === b.displayName) return 0;\n          return a.displayName > b.displayName ? 1 : -1;\n        })\n        .filter((u) => u.displayName?.includes(query)) // bug in firebase where\n        .filter((obj, i) => i < 5);\n    }\n  }\n\n  function keyBindingFn(e) {\n    switch (e.key) {\n      case 'Enter':\n        return 'msg-submit';\n      default:\n        return;\n    }\n  }\n\n  function handleKeyCmd(cmd) {\n    switch (cmd) {\n      case 'msg-submit':\n        onMsgSubmit();\n        break;\n      default:\n        return;\n    }\n\n    async function onMsgSubmit() {\n      const replyToMsgID = replyTo ? replyTo.msgID : null;\n\n      const raw = convertToRaw(editorState.getCurrentContent());\n\n      let mentionArr = [];\n      fillMentionArr();\n      function fillMentionArr() {\n        for (const key in raw.entityMap) {\n          mentionArr.push({\n            uid: raw.entityMap[key].data.mention.uid,\n          });\n        }\n\n        Object.keys(raw.blocks[0].entityRanges).forEach((key, i) => {\n          mentionArr[i] = {\n            ...mentionArr[i],\n            range: raw.blocks[0].entityRanges[i],\n            // the range of indexes the mention belongs in, need to parse later as the msg replaces all mentions with the string 'undefined'\n          };\n        });\n      }\n\n      const msg = raw.blocks[0].text;\n\n      try {\n        if (!isAttachments && !msg) return;\n        let attachmentsURL;\n        if (isAttachments) attachmentsURL = await getAttachmentsURL();\n        await submit(msg, replyToMsgID, mentionArr, attachmentsURL);\n        cleanUpAttachments();\n        setReplyTo();\n\n        //clear draftjs input\n        const newEditorState = EditorState.push(\n          editorState,\n          ContentState.createFromText('')\n        );\n        const currentState = editorState.getSelection();\n        const newEditorWithCurrentState = EditorState.forceSelection(\n          newEditorState,\n          currentState\n        );\n        setEditorState(newEditorWithCurrentState);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n  }\n  return (\n    <div className=\"input-wrapper\">\n      <Editor\n        ref={chatBarInputRef}\n        editorKey={'editor'}\n        editorState={editorState}\n        onChange={onChange}\n        plugins={plugins}\n        keyBindingFn={keyBindingFn}\n        handleKeyCommand={handleKeyCmd}\n        placeholder={`message ${roomName}`}\n      />\n      <MentionSuggestions\n        open={isMentionPopup}\n        onOpenChange={onOpenChange}\n        entryComponent={UserDisplay}\n        popoverContainer={MentionsPopup}\n        suggestions={suggestions}\n        onSearchChange={onQueryChange}\n        renderEmptyPopup={true}\n      />\n    </div>\n  );\n};\n\nexport default ChatBarInput;\n","import React from 'react';\n\nimport AttachmentWrapper from '../Upload/AttachmentWrapper';\nimport ChatBarInput from './ChatBarInput';\nimport UploadFile from '../Upload/UploadFile';\n\nimport addCircleSvg from '../../assets/svg/add-circle-fill.svg';\n\nimport '../../styles/MentionsPopup.css';\nimport 'draft-js/dist/Draft.css';\n\nconst ChatBar = ({\n  replyTo,\n  attachments,\n  handleNewAttachments,\n  removeAttachment,\n  ...props\n}) => {\n  let style = replyTo\n    ? { borderTopLeftRadius: 0, borderTopRightRadius: 0 }\n    : { borderTopLeftRadius: '8px', borderTopRightRadius: '8px' };\n  return (\n    <div className=\"chatbar-content\" style={style}>\n      <div className=\"chatbar-wrapper\">\n        <div className=\"add-wrapper\">\n          <UploadFile\n            handleFile={handleNewAttachments}\n            actionOnChange=\"set attachment\"\n          >\n            <div className=\"icon-btn\">\n              <img src={addCircleSvg} alt=\"upload a file\" />\n            </div>\n          </UploadFile>\n        </div>\n        <ChatBarInput\n          replyTo={replyTo}\n          isAttachments={attachments.length > 0}\n          {...props}\n        />\n      </div>\n      {attachments.length > 0 && (\n        <div className=\"attachments-ctn\">\n          {attachments.map((f, idx) => {\n            return (\n              <AttachmentWrapper\n                key={idx}\n                name={f.name}\n                cancel={() => removeAttachment(f)}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBar;\n","import React from 'react';\nimport IconBtn from '../IconBtn';\n\nimport closeSVG from '../../assets/svg/close-circle-fill.svg';\n\nimport '../../styles/UploadProgress.css';\n\nconst UploadProgressWrapper = ({ isCompleted, task, cancel }) => {\n  return (\n    <div className=\"upload-progress-wrapper\">\n      <div className=\"content\">\n        Uploading <span className=\"text-wrapper\">{task.name}</span>\n        <span className=\"progress-wrapper\">{task.progress}%</span>\n      </div>\n\n      <div className=\"actions\">\n        <IconBtn svg={closeSVG} onClick={cancel} />\n      </div>\n    </div>\n  );\n};\n\nexport default UploadProgressWrapper;\n","import React, { useState, useLayoutEffect, useRef, useContext } from 'react';\n\nimport { ErrorContext } from '../../logic/contexts/ErrorContext';\nimport {\n  beginUpload,\n  cancelUpload,\n  listenToUploadProgress,\n} from '../../logic/channel_firebaseStuff';\nimport { getDownloadURL } from 'firebase/storage';\nimport uniqid from 'uniqid';\n\nimport ReplyBar from './ReplyBar';\nimport ChatBar from './ChatBar';\nimport UploadProgressWrapper from '../Upload/UploadProgressWrapper';\n\nimport '../../styles/ChatBar.css';\n\nconst ChatBarWrapper = ({ replyTo, setReplyTo, ...props }) => {\n  const { setError } = useContext(ErrorContext);\n  const [attachments, setAttachments] = useState([]);\n  const [uploadTasks, setUploadTasks] = useState([]);\n  const uploadTasksCtnRef = useRef();\n\n  useLayoutEffect(function positionUploadTasksCtn() {\n    uploadTasksCtnRef.current.style.top = `-${\n      uploadTasksCtnRef.current.offsetHeight + 10\n    }px`;\n  });\n\n  function handleAttachmentsOnSubmitMsg() {\n    if (attachments.length === 0) return;\n    const copy = [...attachments];\n    setAttachments([]);\n    return Promise.all(\n      copy.map(async (f) => {\n        const task = beginUpload(f);\n        const id = uniqid();\n        setUploadTasks((prev) => [\n          ...prev,\n          {\n            id,\n            task,\n            name: f.name,\n            progress: f.progress,\n          },\n        ]);\n        listenToUploadProgress(task, function setProgress(progress) {\n          setUploadTasks((prev) =>\n            prev.map((t) => {\n              if (t.id === id) return { ...t, progress };\n              return t;\n            })\n          );\n        });\n        await task;\n        const fileURL = await getDownloadURL(task.snapshot.ref);\n\n        return {\n          name: f.name,\n          url: fileURL,\n        };\n      })\n    );\n  }\n  function handleNewAttachments(file) {\n    if (attachments.length === 5)\n      return setError(\"Woooaa, that's a lot of files there bud\");\n    setAttachments((prev) => [...prev, file]);\n  }\n  function removeAttachment(file) {\n    setAttachments((prev) => prev.filter((val) => val !== file));\n  }\n  return (\n    <form className=\"chat-bar\" name=\"chat-bar\" onSubmit={submitHandler}>\n      <div className=\"upload-tasks-ctn\" ref={uploadTasksCtnRef}>\n        {uploadTasks.map((t, idx) => {\n          return <UploadProgressWrapper key={idx} task={t} />;\n        })}\n      </div>\n      {replyTo && (\n        <ReplyBar\n          displayName={replyTo.displayName}\n          close={() => setReplyTo()}\n        />\n      )}\n      <ChatBar\n        replyTo={replyTo}\n        attachments={attachments}\n        handleNewAttachments={handleNewAttachments}\n        removeAttachment={removeAttachment}\n        setReplyTo={setReplyTo}\n        getAttachmentsURL={handleAttachmentsOnSubmitMsg}\n        cleanUpAttachments={() => setUploadTasks([])}\n        {...props}\n      />\n    </form>\n  );\n};\n\nexport default ChatBarWrapper;\n\nfunction submitHandler(e) {\n  e.preventDefault();\n}\n","import React, { useState, useContext, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { subscribeToChannel } from '../../logic/user_firebaseStuff';\nimport { UserContext } from '../../logic/contexts/UserContext';\nimport { ErrorContext } from '../../logic/contexts/ErrorContext';\n\nimport ChatDisplay from './ChatDisplay';\nimport ChatBarWrapper from './ChatBarWrapper';\nimport FlatBtn from '../FlatBtn';\n\nconst ChatWrapper = ({ room, msgList, userList, submitMsg, isVisitor }) => {\n  const { user } = useContext(UserContext);\n  const { setError } = useContext(ErrorContext);\n  const { channelID } = useParams();\n  const [replyTo, setReplyTo] = useState();\n  const chatBarInputRef = useRef();\n\n  function onReplyTo(displayName, msgID) {\n    setReplyTo({ displayName, msgID });\n    chatBarInputRef.current.focus();\n  }\n\n  async function onSubscribe() {\n    try {\n      await subscribeToChannel(user, channelID);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  return (\n    <main id=\"chat\">\n      <ChatDisplay\n        roomID={room.id}\n        msgList={msgList}\n        userList={userList}\n        setReplyTo={setReplyTo}\n        onReplyTo={onReplyTo}\n      />\n      {!isVisitor ? (\n        <ChatBarWrapper\n          userList={userList}\n          submit={submitMsg}\n          roomName={room.name}\n          replyTo={replyTo}\n          setReplyTo={setReplyTo}\n          chatBarInputRef={chatBarInputRef}\n        />\n      ) : (\n        <div className=\"subscribe-banner\">\n          <FlatBtn className=\"filler\" text=\"Subscribe\" onClick={onSubscribe} />\n          to this channel to chat\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default ChatWrapper;\n","import React, { useRef } from 'react';\n\nimport '../../styles/OnlineUsers.css';\nimport CatList from '../CatList';\nimport UserDisplay from './UserDisplay';\nimport useUserCountStrs from '../../logic/custom-hooks/useUserCountStrs';\n\nconst OnlineUsers = ({ list, roles }) => {\n  roles = roles || [];\n\n  const rolesRef = useRef({});\n\n  const userCountStrs = useUserCountStrs(list, roles, rolesRef);\n\n  return (\n    <aside className=\"users-ctn\">\n      {roles.map((role, i) => {\n        return (\n          //each UserRole is given a ref in the rolesRef.current object\n          <CatList\n            key={i}\n            catRef={(el) => (rolesRef.current[role] = el)}\n            cat={role}\n            headerSubtext={userCountStrs[role]}\n            className=\"role-users-wrapper\"\n          >\n            {list\n              .filter((user) => {\n                if (user.role === role) return true;\n                if (!user.role && role === 'Online') return true;\n                return false;\n              })\n              .map((user) => (\n                <UserDisplay key={user.uid} user={user} />\n              ))}\n          </CatList>\n        );\n      })}\n    </aside>\n  );\n};\n\nexport default OnlineUsers;\n","import { useState, useEffect } from 'react';\n\nexport default function useUserCountStrs(list, roles, rolesRef) {\n  const [userCountStrs, setUserCountStrs] = useState({});\n  useEffect(() => {\n    roles.forEach((role) => {\n      if (!rolesRef) return;\n\n      const userCount = list.filter((user) => {\n        if (role === 'Online') return !user.role;\n        return user.role === role;\n      }).length;\n\n      userCount === 0\n        ? rolesRef.current[role].classList.add('hidden')\n        : rolesRef.current[role].classList.remove('hidden');\n\n      setUserCountStrs((prev) => ({ ...prev, [role]: ` - ${userCount}` }));\n    });\n  }, [roles, rolesRef, list]);\n\n  return userCountStrs;\n}\n","import React, { useRef, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useInputValues from '../../../logic/custom-hooks/useInputValues';\nimport {\n  updateRoomName,\n  updateCategoryOfRoom,\n  createRoomCategory,\n  deleteRoom,\n} from '../../../logic/channel_firebaseStuff';\nimport { ChannelContext } from '../../../logic/contexts/ChannelContext';\nimport { ErrorContext } from '../../../logic/contexts/ErrorContext';\nimport useSuccess from '../../../logic/custom-hooks/useSuccess';\n\nimport FlatBtn from '../../FlatBtn';\nimport InputField from '../../InputField';\nimport Success from '../../Success';\n\nimport '../../../styles/RoomOverview.css';\nimport { useState } from 'react/cjs/react.development';\n\nconst RoomOverview = ({ room }) => {\n  const { channelID } = useParams();\n  const { roomCategories } = useContext(ChannelContext);\n  const { setError } = useContext(ErrorContext);\n\n  const { inputValues, setInputValues, handleChange } = useInputValues();\n  useEffect(() => {\n    setInputValues({\n      room_name: room.name,\n      room_category: room.category,\n    });\n  }, [room, setInputValues]);\n\n  const isMounted = useRef();\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n  const { success, setSuccess } = useSuccess(isMounted);\n  const [isSaving, setIsSaving] = useState(false);\n  return (\n    <>\n      {success && <Success text={success} />}\n      <section className=\"room_overview\">\n        <header>\n          <h2>Overview</h2>\n        </header>\n        <div className=\"inner-content\">\n          <form\n            className=\"fields-ctn\"\n            onSubmit={async (e) => {\n              e.preventDefault();\n              try {\n                setIsSaving(true);\n                const { room_name, room_category } = inputValues;\n                if (room_name !== room.name)\n                  await updateRoomName(channelID, room.id, room_name);\n\n                if (room_category === room.category) return;\n\n                if (roomCategories.indexOf(room_category) === -1)\n                  await createRoomCategory(channelID, room_category);\n                await updateCategoryOfRoom(channelID, room.id, room_category);\n\n                if (isMounted.current) {\n                  setIsSaving(false);\n                  setSuccess('changes saved');\n                }\n              } catch (error) {\n                setError(error.message);\n              }\n            }}\n          >\n            <InputField\n              label={'room name'}\n              name=\"room_name\"\n              onChange={handleChange}\n              value={inputValues.room_name}\n            />\n            <InputField\n              label={'room category'}\n              name=\"room_category\"\n              onChange={handleChange}\n              value={inputValues.room_category}\n            />\n            <div className=\"btn-ctn\">\n              <FlatBtn\n                className=\"filled\"\n                text=\"Save changes\"\n                type=\"submit\"\n                loading={isSaving}\n              />\n            </div>\n          </form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default RoomOverview;\n","import React, { useContext, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { ErrorContext } from '../../../logic/contexts/ErrorContext';\nimport { deleteRoom } from '../../../logic/channel_firebaseStuff';\nimport useMobileCheck from '../../../logic/custom-hooks/useMobileCheck';\n\nimport RoomOverview from './RoomOverview';\nimport Error from '../../Error';\nimport Import from '../../../logic/Import';\n\nconst RoomSettings = ({ room, close }) => {\n  const { SetError } = useContext(ErrorContext);\n  const { channelID, roomID } = useParams();\n  const {\n    isMobileCheck: { current: isMobile },\n  } = useMobileCheck();\n\n  const [state, dispatch] = useReducer((state, action) => {\n    if (action.type === 'swap_to') {\n      switch (action.payload) {\n        case 'overview':\n          return 'overview';\n        case 'delete room':\n          (async function () {\n            try {\n              await deleteRoom(channelID, roomID);\n              close();\n            } catch (error) {\n              SetError(error.message);\n            }\n          })();\n          break;\n        default:\n          throw new Error(\"that doesn't exist!\");\n      }\n    }\n  }, 'overview');\n\n  return (\n    <Import\n      mobile={() => import('../Settings _mobile')}\n      desktop={() => import('../Settings_desktop')}\n      isMobile={isMobile}\n    >\n      {(Settings) => (\n        <Settings\n          close={close}\n          categories={[`${room.name}`, 'none']}\n          btnList={[\n            createSettingsButtonDetails('overview', `${room.name}`, true),\n            createSettingsButtonDetails('delete room', 'none'),\n          ]}\n          dispatch={dispatch}\n        >\n          {state &&\n            {\n              overview: <RoomOverview room={room} />,\n            }[state]}\n        </Settings>\n      )}\n    </Import>\n  );\n};\n\nexport default RoomSettings;\n\nfunction createSettingsButtonDetails(text, category, isDefault) {\n  return {\n    text,\n    category,\n    isDefault,\n  };\n}\n"],"sourceRoot":""}